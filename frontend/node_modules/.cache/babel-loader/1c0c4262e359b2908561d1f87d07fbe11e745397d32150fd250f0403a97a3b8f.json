{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Link from 'react-router-dom';\nimport ConfirmDeletion from './Components/ConfirmDeletion';\nconst ListBodyTypes = () => {\n  _s();\n  const [bodyTypes, setBodyTypes] = useState([]);\n  const [selectedBodyTypeId, setSelectedBodyTypeId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const [popupType, setPopupType] = useState('info'); // 'info' or 'error'\n\n  useEffect(() => {\n    const fetchBodyTypes = async () => {\n      try {\n        const response = await fetch('http://localhost:3050/api/bodyTypes');\n        const data = await response.json();\n        setBodyTypes(data);\n      } catch (error) {\n        console.error('Error fetching body types:', error);\n      }\n    };\n    fetchBodyTypes();\n  }, []);\n};\n_s(ListBodyTypes, \"Ua519+No89yqn6dHeJMjsfWfD4Q=\");\n_c = ListBodyTypes;\nconst handleDeleteClick = bodyTypeId => {\n  setSelectedBodyTypeId(bodyTypeId); // Set the option ID to state\n  setIsModalOpen(true); // Show the modal\n};\nconst confirmDelete = async () => {\n  if (selectedBodyTypeId) {\n    try {\n      await axios.delete(`http://localhost:3050/api/bodyTypes/deleteBodyType/${selectedBodyTypeId}`);\n      setIsModalOpen(false); // Close the modal\n      // Custom success notification\n      setPopupMessage('Body Type Deleted Successfully!');\n      setPopupType('info');\n      setIsPopupOpen(true);\n      setBodyTypes(bodyTypes.filter(bodyType => bodyType._id !== selectedBodyTypeId)); // Update state to remove the item\n    } catch (error) {\n      console.error('Error deleting body type:', error.message);\n      // Custom error notification\n      setPopupMessage('Error deleting body type. Please try again.');\n      setPopupType('error');\n      setIsPopupOpen(true);\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ListBodyTypes\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","axios","Link","ConfirmDeletion","ListBodyTypes","_s","bodyTypes","setBodyTypes","selectedBodyTypeId","setSelectedBodyTypeId","isModalOpen","setIsModalOpen","isPopupOpen","setIsPopupOpen","popupMessage","setPopupMessage","popupType","setPopupType","fetchBodyTypes","response","fetch","data","json","error","console","_c","handleDeleteClick","bodyTypeId","confirmDelete","delete","filter","bodyType","_id","message","$RefreshReg$"],"sources":["D:/SLIIT/Year_3_Sem_1/Z Projects/SPM Project/Shopping-Eye-Extended/frontend/src/pages/Recommendations/TestPage.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Link from 'react-router-dom';\r\nimport ConfirmDeletion from './Components/ConfirmDeletion';\r\n\r\nconst ListBodyTypes = () => {\r\n  const [bodyTypes, setBodyTypes] = useState([]);\r\n  const [selectedBodyTypeId, setSelectedBodyTypeId] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n  const [popupType, setPopupType] = useState('info'); // 'info' or 'error'\r\n\r\n  useEffect(() => {\r\n    const fetchBodyTypes = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3050/api/bodyTypes');\r\n        const data = await response.json();\r\n        setBodyTypes(data);\r\n      } catch (error) {\r\n        console.error('Error fetching body types:', error);\r\n      }\r\n    };\r\n\r\n    fetchBodyTypes();\r\n  }, []);\r\n}\r\n\r\n\r\nconst handleDeleteClick = (bodyTypeId) => {\r\n  setSelectedBodyTypeId(bodyTypeId); // Set the option ID to state\r\n  setIsModalOpen(true); // Show the modal\r\n};\r\n\r\nconst confirmDelete = async () => {\r\n  if (selectedBodyTypeId) {\r\n    try {\r\n      await axios.delete(`http://localhost:3050/api/bodyTypes/deleteBodyType/${selectedBodyTypeId}`);\r\n      setIsModalOpen(false); // Close the modal\r\n      // Custom success notification\r\n      setPopupMessage('Body Type Deleted Successfully!');\r\n      setPopupType('info');\r\n      setIsPopupOpen(true);\r\n      setBodyTypes(bodyTypes.filter(bodyType => bodyType._id !== selectedBodyTypeId)); // Update state to remove the item\r\n    } catch (error) {\r\n      console.error('Error deleting body type:', error.message);\r\n      // Custom error notification\r\n      setPopupMessage('Error deleting body type. Please try again.');\r\n      setPopupType('error');\r\n      setIsPopupOpen(true);\r\n    }\r\n  }\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,UAAU,QAAO,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCf,YAAY,CAACc,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAAAb,EAAA,CArBKD,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAwBnB,MAAMsB,iBAAiB,GAAIC,UAAU,IAAK;EACxClB,qBAAqB,CAACkB,UAAU,CAAC,CAAC,CAAC;EACnChB,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AACxB,CAAC;AAED,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAIpB,kBAAkB,EAAE;IACtB,IAAI;MACF,MAAMP,KAAK,CAAC4B,MAAM,CAAC,sDAAsDrB,kBAAkB,EAAE,CAAC;MAC9FG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;MACAI,eAAe,CAAC,iCAAiC,CAAC;MAClDE,YAAY,CAAC,MAAM,CAAC;MACpBJ,cAAc,CAAC,IAAI,CAAC;MACpBN,YAAY,CAACD,SAAS,CAACwB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,GAAG,KAAKxB,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACU,OAAO,CAAC;MACzD;MACAlB,eAAe,CAAC,6CAA6C,CAAC;MAC9DE,YAAY,CAAC,OAAO,CAAC;MACrBJ,cAAc,CAAC,IAAI,CAAC;IACtB;EACF;AACF,CAAC;AAAA,IAAAY,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}