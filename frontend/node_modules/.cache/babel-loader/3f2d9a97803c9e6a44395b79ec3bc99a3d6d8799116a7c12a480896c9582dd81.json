{"ast":null,"code":"var _jsxFileName = \"D:\\\\SLIIT\\\\Year_3_Sem_1\\\\Z Projects\\\\SPM Project\\\\Shopping-Eye-Extended\\\\frontend\\\\src\\\\pages\\\\Recommendations\\\\TestPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Link from 'react-router-dom';\nimport ConfirmDeletion from './Components/ConfirmDeletion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListBodyTypes = () => {\n  _s();\n  const [bodyTypes, setBodyTypes] = useState([]);\n  const [selectedBodyTypeId, setSelectedBodyTypeId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const [popupType, setPopupType] = useState('info'); // 'info' or 'error'\n\n  useEffect(() => {\n    const fetchBodyTypes = async () => {\n      try {\n        const response = await fetch('http://localhost:3050/api/bodyTypes/getAllBodyTypes');\n        const data = await response.json();\n        setBodyTypes(data);\n      } catch (error) {\n        console.error('Error fetching body types:', error);\n      }\n    };\n    fetchBodyTypes();\n  }, []);\n  const handleDeleteClick = bodyTypeId => {\n    setSelectedBodyTypeId(bodyTypeId); // Set the option ID to state\n    setIsModalOpen(true); // Show the modal\n  };\n  const confirmDelete = async () => {\n    if (selectedBodyTypeId) {\n      try {\n        await axios.delete(`http://localhost:3050/api/bodyTypes/deleteBodyType/${selectedBodyTypeId}`);\n        setIsModalOpen(false); // Close the modal\n        // Custom success notification\n        setPopupMessage('Body Type Deleted Successfully!');\n        setPopupType('info');\n        setIsPopupOpen(true);\n        setBodyTypes(bodyTypes.filter(bodyType => bodyType._id !== selectedBodyTypeId)); // Update state to remove the item\n      } catch (error) {\n        console.error('Error deleting body type:', error.message);\n        // Custom error notification\n        setPopupMessage('Error deleting body type. Please try again.');\n        setPopupType('error');\n        setIsPopupOpen(true);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Body Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), \"className=\\\"border-b border-gray-200 hover:bg-blue-50 hover:opacity-50 \\\"\", isModalOpen && /*#__PURE__*/_jsxDEV(ConfirmDeletion, {\n      onConfirm: confirmDelete,\n      onCancel: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup ${popupType}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: popupMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPopupOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n_s(ListBodyTypes, \"Ua519+No89yqn6dHeJMjsfWfD4Q=\");\n_c = ListBodyTypes;\nexport default ListBodyTypes;\nvar _c;\n$RefreshReg$(_c, \"ListBodyTypes\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","axios","Link","ConfirmDeletion","jsxDEV","_jsxDEV","ListBodyTypes","_s","bodyTypes","setBodyTypes","selectedBodyTypeId","setSelectedBodyTypeId","isModalOpen","setIsModalOpen","isPopupOpen","setIsPopupOpen","popupMessage","setPopupMessage","popupType","setPopupType","fetchBodyTypes","response","fetch","data","json","error","console","handleDeleteClick","bodyTypeId","confirmDelete","delete","filter","bodyType","_id","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onConfirm","onCancel","className","onClick","_c","$RefreshReg$"],"sources":["D:/SLIIT/Year_3_Sem_1/Z Projects/SPM Project/Shopping-Eye-Extended/frontend/src/pages/Recommendations/TestPage.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Link from 'react-router-dom';\r\nimport ConfirmDeletion from './Components/ConfirmDeletion';\r\n\r\nconst ListBodyTypes = () => {\r\n  const [bodyTypes, setBodyTypes] = useState([]);\r\n  const [selectedBodyTypeId, setSelectedBodyTypeId] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n  const [popupType, setPopupType] = useState('info'); // 'info' or 'error'\r\n\r\n  useEffect(() => {\r\n    const fetchBodyTypes = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3050/api/bodyTypes/getAllBodyTypes');\r\n        const data = await response.json();\r\n        setBodyTypes(data);\r\n      } catch (error) {\r\n        console.error('Error fetching body types:', error);\r\n      }\r\n    };\r\n\r\n    fetchBodyTypes();\r\n  }, []);\r\n\r\n\r\n\r\nconst handleDeleteClick = (bodyTypeId) => {\r\n  setSelectedBodyTypeId(bodyTypeId); // Set the option ID to state\r\n  setIsModalOpen(true); // Show the modal\r\n};\r\n\r\nconst confirmDelete = async () => {\r\n  if (selectedBodyTypeId) {\r\n    try {\r\n      await axios.delete(`http://localhost:3050/api/bodyTypes/deleteBodyType/${selectedBodyTypeId}`);\r\n      setIsModalOpen(false); // Close the modal\r\n      // Custom success notification\r\n      setPopupMessage('Body Type Deleted Successfully!');\r\n      setPopupType('info');\r\n      setIsPopupOpen(true);\r\n      setBodyTypes(bodyTypes.filter(bodyType => bodyType._id !== selectedBodyTypeId)); // Update state to remove the item\r\n    } catch (error) {\r\n      console.error('Error deleting body type:', error.message);\r\n      // Custom error notification\r\n      setPopupMessage('Error deleting body type. Please try again.');\r\n      setPopupType('error');\r\n      setIsPopupOpen(true);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nreturn ( \r\n  <div>\r\n    <h1>Body Types</h1>className=\"border-b border-gray-200 hover:bg-blue-50 hover:opacity-50 \"\r\n    {isModalOpen && (\r\n      <ConfirmDeletion\r\n        onConfirm={confirmDelete}\r\n        onCancel={() => setIsModalOpen(false)}\r\n      />\r\n    )}\r\n    {isPopupOpen && (\r\n      <div className={`popup ${popupType}`}>\r\n        <p>{popupMessage}</p>\r\n        <button onClick={() => setIsPopupOpen(false)}>Close</button>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n}\r\n\r\nexport default ListBodyTypes;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,UAAU,QAAO,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMqB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqD,CAAC;QACnF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCf,YAAY,CAACc,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAIR,MAAMO,iBAAiB,GAAIC,UAAU,IAAK;IACxCjB,qBAAqB,CAACiB,UAAU,CAAC,CAAC,CAAC;IACnCf,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAInB,kBAAkB,EAAE;MACtB,IAAI;QACF,MAAMT,KAAK,CAAC6B,MAAM,CAAC,sDAAsDpB,kBAAkB,EAAE,CAAC;QAC9FG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QACvB;QACAI,eAAe,CAAC,iCAAiC,CAAC;QAClDE,YAAY,CAAC,MAAM,CAAC;QACpBJ,cAAc,CAAC,IAAI,CAAC;QACpBN,YAAY,CAACD,SAAS,CAACuB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,GAAG,KAAKvB,kBAAkB,CAAC,CAAC,CAAC,CAAC;MACnF,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACS,OAAO,CAAC;QACzD;QACAjB,eAAe,CAAC,6CAA6C,CAAC;QAC9DE,YAAY,CAAC,OAAO,CAAC;QACrBJ,cAAc,CAAC,IAAI,CAAC;MACtB;IACF;EACF,CAAC;EAKD,oBACEV,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,6EACnB,EAAC3B,WAAW,iBACVP,OAAA,CAACF,eAAe;MACdqC,SAAS,EAAEX,aAAc;MACzBY,QAAQ,EAAEA,CAAA,KAAM5B,cAAc,CAAC,KAAK;IAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACF,EACAzB,WAAW,iBACVT,OAAA;MAAKqC,SAAS,EAAE,SAASxB,SAAS,EAAG;MAAAiB,QAAA,gBACnC9B,OAAA;QAAA8B,QAAA,EAAInB;MAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBlC,OAAA;QAAQsC,OAAO,EAAEA,CAAA,KAAM5B,cAAc,CAAC,KAAK,CAAE;QAAAoB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAAhC,EAAA,CArEKD,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAuEnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}