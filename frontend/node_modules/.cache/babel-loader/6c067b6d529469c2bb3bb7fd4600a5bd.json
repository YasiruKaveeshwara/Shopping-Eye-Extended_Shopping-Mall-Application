{"ast":null,"code":"var _jsxFileName = \"D:\\\\My GitHub\\\\Shopping-Eye-Extended\\\\frontend\\\\src\\\\pages\\\\shopQR.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nexport default function ShopQR() {\n  const [url, setUrl] = useState(\"\");\n  const [qrCode, setQrCode] = useState(null);\n  const [scannedData, setScannedData] = useState(\"\");\n  const [showScanner, setShowScanner] = useState(false);\n  const scannerRef = useRef(null);\n  const generateQRCode = () => {\n    if (url.trim() !== \"\") {\n      setQrCode(url); // Set the entered URL or text to generate QR code\n    }\n  };\n  useEffect(() => {\n    if (showScanner) {\n      // Initialize the QR scanner when showScanner is true\n      const html5QrCodeScanner = new Html5QrcodeScanner(\"reader\", {\n        fps: 10,\n        qrbox: {\n          width: 250,\n          height: 250\n        }\n      });\n      html5QrCodeScanner.render(data => {\n        setScannedData(data);\n        html5QrCodeScanner.clear();\n        setShowScanner(false);\n      }, error => {\n        console.log(`QR code scanning error: ${error}`);\n      });\n      return () => {\n        html5QrCodeScanner.clear(); // Cleanup scanner on component unmount\n      };\n    }\n  }, [showScanner]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Shop QR\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Shop Name or URL\",\n    onChange: e => setUrl(e.target.value),\n    value: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: generateQRCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Generate\")), qrCode && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"QR Code:\"), /*#__PURE__*/React.createElement(QRCodeCanvas, {\n    value: qrCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowScanner(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Scan QR Code\")), showScanner && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"reader\",\n    style: {\n      width: \"300px\",\n      height: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), scannedData && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Scanned Data:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, scannedData)));\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCodeCanvas","Html5QrcodeScanner","ShopQR","url","setUrl","qrCode","setQrCode","scannedData","setScannedData","showScanner","setShowScanner","scannerRef","generateQRCode","trim","html5QrCodeScanner","fps","qrbox","width","height","render","data","clear","error","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","id","style"],"sources":["D:/My GitHub/Shopping-Eye-Extended/frontend/src/pages/shopQR.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";\r\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\r\n\r\nexport default function ShopQR() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [qrCode, setQrCode] = useState(null);\r\n  const [scannedData, setScannedData] = useState(\"\");\r\n  const [showScanner, setShowScanner] = useState(false);\r\n  const scannerRef = useRef(null);\r\n\r\n  const generateQRCode = () => {\r\n    if (url.trim() !== \"\") {\r\n      setQrCode(url); // Set the entered URL or text to generate QR code\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showScanner) {\r\n      // Initialize the QR scanner when showScanner is true\r\n      const html5QrCodeScanner = new Html5QrcodeScanner(\r\n        \"reader\",\r\n        { fps: 10, qrbox: { width: 250, height: 250 } }\r\n      );\r\n      html5QrCodeScanner.render(\r\n        (data) => {\r\n          setScannedData(data);\r\n          html5QrCodeScanner.clear();\r\n          setShowScanner(false);\r\n        },\r\n        (error) => {\r\n          console.log(`QR code scanning error: ${error}`);\r\n        }\r\n      );\r\n\r\n      return () => {\r\n        html5QrCodeScanner.clear(); // Cleanup scanner on component unmount\r\n      };\r\n    }\r\n  }, [showScanner]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Shop QR</h1>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Shop Name or URL\"\r\n          onChange={(e) => setUrl(e.target.value)}\r\n          value={url}\r\n        />\r\n        <button onClick={generateQRCode}>Generate</button>\r\n      </div>\r\n\r\n      {qrCode && (\r\n        <div>\r\n          <h2>QR Code:</h2>\r\n          <QRCodeCanvas value={qrCode} />\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <button onClick={() => setShowScanner(true)}>Scan QR Code</button>\r\n      </div>\r\n\r\n      {showScanner && (\r\n        <div id=\"reader\" style={{ width: \"300px\", height: \"300px\" }}></div>\r\n      )}\r\n\r\n      {scannedData && (\r\n        <div>\r\n          <h2>Scanned Data:</h2>\r\n          <p>{scannedData}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}