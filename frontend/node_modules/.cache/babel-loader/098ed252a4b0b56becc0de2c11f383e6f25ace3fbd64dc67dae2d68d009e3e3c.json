{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport SidebarIcon from '../components/sidebar/SidebarIcon';\nimport Link from 'react-router-dom';\nimport ConfirmDeletion from './Components/ConfirmDeletion';\nconst ListBodyTypes = () => {\n  _s();\n  const [bodyTypes, setBodyTypes] = useState([]);\n  const [selectedBodyTypeId, setSelectedBodyTypeId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const [popupType, setPopupType] = useState('info'); // 'info' or 'error'\n\n  useEffect(() => {\n    const fetchBodyTypes = async () => {\n      try {\n        const response = await fetch('http://localhost:3050/api/bodyTypes');\n        const data = await response.json();\n        setBodyTypes(data);\n      } catch (error) {\n        console.error('Error fetching body types:', error);\n      }\n    };\n    fetchBodyTypes();\n  }, []);\n};\n_s(ListBodyTypes, \"Ua519+No89yqn6dHeJMjsfWfD4Q=\");\n_c = ListBodyTypes;\nhandleClick;\nvar _c;\n$RefreshReg$(_c, \"ListBodyTypes\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","axios","SidebarIcon","Link","ConfirmDeletion","ListBodyTypes","_s","bodyTypes","setBodyTypes","selectedBodyTypeId","setSelectedBodyTypeId","isModalOpen","setIsModalOpen","isPopupOpen","setIsPopupOpen","popupMessage","setPopupMessage","popupType","setPopupType","fetchBodyTypes","response","fetch","data","json","error","console","_c","handleClick","$RefreshReg$"],"sources":["D:/SLIIT/Year_3_Sem_1/Z Projects/SPM Project/Shopping-Eye-Extended/frontend/src/pages/Recommendations/TestPage.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SidebarIcon from '../components/sidebar/SidebarIcon';\r\nimport Link from 'react-router-dom';\r\nimport ConfirmDeletion from './Components/ConfirmDeletion';\r\n\r\nconst ListBodyTypes = () => {\r\n  const [bodyTypes, setBodyTypes] = useState([]);\r\n  const [selectedBodyTypeId, setSelectedBodyTypeId] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n  const [popupType, setPopupType] = useState('info'); // 'info' or 'error'\r\n\r\n  useEffect(() => {\r\n    const fetchBodyTypes = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3050/api/bodyTypes');\r\n        const data = await response.json();\r\n        setBodyTypes(data);\r\n      } catch (error) {\r\n        console.error('Error fetching body types:', error);\r\n      }\r\n    };\r\n\r\n    fetchBodyTypes();\r\n  }, []);\r\n}\r\n\r\n\r\nhandleClick"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,UAAU,QAAO,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMoB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCf,YAAY,CAACc,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAAAb,EAAA,CArBKD,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAwBnBsB,WAAW;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}